<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Melon</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-12-17T01:37:13.083Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CSRF总结</title>
    <link href="http://yoursite.com/2019/12/17/CSRF/"/>
    <id>http://yoursite.com/2019/12/17/CSRF/</id>
    <published>2019-12-17T00:37:11.000Z</published>
    <updated>2019-12-17T01:37:13.083Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;CSRF跨站点请求伪造(Cross—Site Request Forgery)，跟XSS攻击一样，存在巨大的危害性，你可以这样来理解：&lt;br&gt;攻击者盗用了你的身份，以你的名义发送恶意请求，对服务器来说这个请求是完全合法的，但是却完成了攻击者所期望的一个操作，比如以你的名义发送邮件、发消息，盗取你的账号，添加系统管理员，甚至于购买商品、虚拟货币转账等。 如下：其中Web A为存在CSRF漏洞的网站，Web B为攻击者构建的恶意网站，User C为Web A网站的合法用户。&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
      <category term="漏洞挖掘" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/"/>
    
      <category term="CSRF" scheme="http://yoursite.com/tags/CSRF/"/>
    
  </entry>
  
  <entry>
    <title>跨站脚本攻击(XSS)</title>
    <link href="http://yoursite.com/2019/12/16/%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%BC%8F%E6%B4%9E(XSS)/"/>
    <id>http://yoursite.com/2019/12/16/跨站脚本漏洞(XSS)/</id>
    <published>2019-12-16T00:23:59.000Z</published>
    <updated>2019-12-17T00:34:51.075Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;XSS漏洞是Web应用程序中最常见的漏洞之一。如果您的站点没有预防XSS漏洞的固定方法，那么很可能就存在XSS漏洞。文章讲会从代码层面讲解XSS还有一些Payload。&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="漏洞挖掘" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/"/>
    
      <category term="xss" scheme="http://yoursite.com/tags/xss/"/>
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>SSRF总结</title>
    <link href="http://yoursite.com/2019/12/15/SSRF/"/>
    <id>http://yoursite.com/2019/12/15/SSRF/</id>
    <published>2019-12-15T05:50:11.000Z</published>
    <updated>2019-12-15T15:56:37.632Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;SSRF(Server-Side Request Forgery:服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF攻击的目标是从外网无法访问的内部系统。（正是因为它是由服务端发起的，所以它能够请求到与它相连而与外网隔离的内部系统）&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
      <category term="漏洞挖掘" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/"/>
    
      <category term="SSRF" scheme="http://yoursite.com/tags/SSRF/"/>
    
  </entry>
  
  <entry>
    <title>序列化与反序列化</title>
    <link href="http://yoursite.com/2019/12/14/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2019/12/14/反序列化漏洞/</id>
    <published>2019-12-14T00:50:11.000Z</published>
    <updated>2019-12-14T15:22:32.712Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;漏洞：通常情况下不影响软件的正常功能，但如果被攻击者利用，有可能驱使软件去执行一些额外的恶意代码，从而引发&lt;/p&gt;
&lt;p&gt;内存中的数据对象只有转换成二进制才可以进行数据持久化和网络传输。将数据对象转换成二进制的流程称之为对象的序列化（Serialization）。反之，将二进制流恢复为数据对象的过程称之为反序列化（Deserialization）。序列化需要保留充分的信息以恢复数据对象，但是为了节省存储空间和网络带宽，序列化后的二进制流又要尽可能的小。&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
      <category term="漏洞挖掘" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/"/>
    
      <category term="序列化" scheme="http://yoursite.com/tags/%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>WEB渗透测试之漏洞挖掘</title>
    <link href="http://yoursite.com/2019/12/13/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B9%8B%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/"/>
    <id>http://yoursite.com/2019/12/13/渗透测试之漏洞挖掘/</id>
    <published>2019-12-13T05:23:58.000Z</published>
    <updated>2019-12-17T02:48:46.656Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;漏洞：通常情况下不影响软件的正常功能，但如果被攻击者利用，有可能驱使软件去执行一些额外的恶意代码，从而引发严重的后果。最常见的漏洞有缓冲区溢出漏洞、整数溢出漏洞、指针覆盖漏洞等。&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="漏洞挖掘" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/"/>
    
      <category term="泄露" scheme="http://yoursite.com/tags/%E6%B3%84%E9%9C%B2/"/>
    
      <category term="注入" scheme="http://yoursite.com/tags/%E6%B3%A8%E5%85%A5/"/>
    
      <category term="webshll" scheme="http://yoursite.com/tags/webshll/"/>
    
      <category term="sql" scheme="http://yoursite.com/tags/sql/"/>
    
      <category term="中间件" scheme="http://yoursite.com/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
      <category term="未授权" scheme="http://yoursite.com/tags/%E6%9C%AA%E6%8E%88%E6%9D%83/"/>
    
      <category term="包含" scheme="http://yoursite.com/tags/%E5%8C%85%E5%90%AB/"/>
    
      <category term="命令执行" scheme="http://yoursite.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>WEB渗透测试之信息收集</title>
    <link href="http://yoursite.com/2019/12/12/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B9%8B%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <id>http://yoursite.com/2019/12/12/渗透测试之信息收集/</id>
    <published>2019-12-12T03:50:11.000Z</published>
    <updated>2019-12-17T02:48:42.930Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;搞渗透的人应该都清楚，给一个目标站点做测试，第一步就是信息收集，通过各种渠道和手段尽可能收集到多的关于这个站点的信息，帮助我们更多的去找到渗透点。而信息收集的方式有很多，大致有搜索引擎、域名注册网站、shodan、github信息收集工具、网站公告等等，甚至还有社工的方式。&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="信息收集" scheme="http://yoursite.com/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
      <category term="端口" scheme="http://yoursite.com/tags/%E7%AB%AF%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>JsWebshell</title>
    <link href="http://yoursite.com/2019/12/11/JSshell/"/>
    <id>http://yoursite.com/2019/12/11/JSshell/</id>
    <published>2019-12-11T07:50:11.000Z</published>
    <updated>2019-12-11T08:53:13.332Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在目标站有可写的html点时可以使用&lt;/p&gt;
    
    </summary>
    
    
      <category term="webshell" scheme="http://yoursite.com/categories/webshell/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>BadUsb</title>
    <link href="http://yoursite.com/2019/04/19/BadUsb/"/>
    <id>http://yoursite.com/2019/04/19/BadUsb/</id>
    <published>2019-04-19T09:28:54.000Z</published>
    <updated>2019-12-15T14:21:04.726Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在2014年美国黑帽大会上，柏林SRLabs的安全研究人员JakobLell和独立安全研究人员Karsten Nohl展示了他们称为“BadUSB”(按照BadBIOS命名)的攻击方法，这种攻击方法让USB安全和几乎所有和USB相关的设备(包括具有USB端口的电脑)都陷入相当危险的状态。&lt;/p&gt;
    
    </summary>
    
    
      <category term="硬件安全" scheme="http://yoursite.com/categories/%E7%A1%AC%E4%BB%B6%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="钓鱼" scheme="http://yoursite.com/tags/%E9%92%93%E9%B1%BC/"/>
    
      <category term="USB" scheme="http://yoursite.com/tags/USB/"/>
    
  </entry>
  
</feed>
